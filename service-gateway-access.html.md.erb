---
title: Service-Gateway Access for RabbitMQ for Tanzu Application Service
owner: London Services
---

Service-gateway access enables a <%= vars.product_full %>  on-demand service instance to
connect to external components that are not on the same foundation as the service instance.
These components might be on another foundation or hosted outside of the foundation.

For related procedures, see:

- [Enabling Service-Gateway Access](./enable-service-gateway.html)
- [Create a Service Instance with Service-Gateway Access](./create-service-gateway-instance.html)

## <a id='overview'></a> Overview

There are multiple use cases for service-gateway access. For example:

- Accessing Redis from apps deployed to <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) in a different foundation.
- Using Redis as a service for apps that are not deployed to <%= vars.app_runtime_abbr %>.

## <a id='architecture'></a> Architecture

Service Gateway access to <%= vars.product_short %> instances leverages the TCP Router in <%= vars.app_runtime_abbr %>.

Any Redis requests that an app makes are forwarded through DNS to a load balancer that can route
traffic from outside to inside the foundation.
This load balancer (the TCP Router) opens a range of ports that are reserved for any TAS application traffic.
When an app developer creates a service instance on a plan with service-gateway access enabled, a
port from such a range is provisioned for that service instance.
The load balancer then forwards the requests for this <%= vars.product_short %> service instance to
the TCP router.

![sg-architecture](images/sg-architecture.png)
