---
title: Installing Redis for PCF
owner: London Services
---

<strong><%= modified_date %></strong>

This topic describes the process of installing Redis for PCF.
It covers tasks from downloading the file from the Pivotal Network
through verifying the installation after configuration.

## <a id="rbac"></a>Role-Based Access in Ops Manager

Ops Manager administrators can use Role-Based Access Control (RBAC) to manage which 
operators can make deployment changes, view credentials, and manage user roles in Ops Manager. 
Therefore, your role permissions might not allow you to perform every procedure in this operator guide.

For more information about roles in Ops Manager, see 
    <a href="https://docs.pivotal.io/pivotalcf/opsguide/config-rbac.html#about">
        Understand Roles in Ops Manager</a>.</p>

## <a id="install"></a>Download and Install the Tile

To add Redis for Pivotal Cloud Foundry (PCF) to Ops Manager, follow the procedure for adding PCF Ops Manager tiles:

1. Download the Redis for PCF file from [Pivotal Network](https://network.pivotal.io/products/p-redis). 
Select the latest release from the **Releases** drop-down menu.
1. In the PCF Ops Manager Installation Dashboard, click **Import a Product** to upload the Redis for PCF file.
1. Click the **+** sign next to the uploaded product description to add the tile to your staging area.
1. To configure Redis for PCF, click the newly added tile.
1. After completing the required configuration, click **Apply Changes** to install the service.

For guidance on ports and ranges used in the Redis service, see [Select Networks](#network-configuration) below.

## <a id="azs"></a>Assign AZs and Networks

To assign AZs and networks, click the **Assign AZs and Networks** settings tab.

![AZ Assignment Diagram](AZ-assignment.png)

###  <a id="az-config"></a>Assign AZs

As of Redis for PCF v1.9, you can assign multiple AZs to Redis jobs, however this does not guarantee high availability.
For more information, see [Support for Multiple AZs](erc.html#other-notes).

To assign AZs, do the following:

1. In the **Assign AZs and Networks** tab, make your selections under **Place singleton jobs in** and **Balance other jobs in**.
1. Click **Save**.


###  <a id="network-configuration"></a>Select Networks

You can use Redis for PCF with or without using the on-demand service.
To use the Redis for PCF on-demand service, you must select a network in which 
the service instances are created. 
For more information, see [Networking for On-Demand Services](./odnetworking.html).

<p class="note"><strong>Note</strong>: 
  In Ops Manager v2.0 and earlier, a specific network was designated as the 
  Service Network to reserve IPs for the on-demand service.
  As of Ops Manager v2.1, IPs are no longer managed in this way. All networks
  are now available to use as a Service Network.</p>

To select networks, do the following:

1. In the **Assign AZs and Networks** tab, select a **Network**.<br><br>
    Pivotal recommends that each type of PCF service run in its own network.
    For example, run Redis for PCF on a separate network from RabbitMQ for PCF.

1. If using the on-demand service, select a **Service Network**. 
Otherwise, select an [empty service network](https://discuss.pivotal.io/hc/en-us/articles/115010154387).

#### Port Ranges Used in Redis for PCF

The following ports and ranges are used in Redis for PCF:

| Port                  | Protocol                     | Direction and Network                                                                          | Reason                                                                                                                      |
|:----------------------|:-----------------------------|:-----------------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------|
| 8300<br>8301             | TCP<br>TCP and UDP | Inbound to Cloud Foundry network, outbound from service broker and service instance networks* | Communication between the CF consul\_server and consul\_agents on Redis deployment; used for metrics                         |
| 8202                  | TCP                          | Inbound to Cloud Foundry network, outbound from service broker and service instance networks* | Used by the Redis metron_agent to forward metrics to the Cloud Foundry Loggregator                                          |
| 12350                 | TCP                          | Outbound from Cloud Foundry to the cf-redis-broker service broker network                       | (Only if using a cf-redis-broker) Access to the cf-redis-broker from the cloud controllers.                                 |
| 12345                 | TCP                          | Outbound from Cloud Foundry to the on-demand service broker network                             | (Only if using an On-Demand service) For access to the on-demand service broker from the cloud controllers          |
| 6379                  | TCP                          | Outbound from Cloud Foundry to any service instance networks (dedicated-node and on-demand)     | Access to all dedicated nodes and on-demand nodes from the Diego Cell and Diego Brain network(s)                            |
| 32768-61000           | TCP                          | Outbound from Cloud Foundry to the cf-redis-broker service broker network                       | From the Diego Cell and Diego Brain network(s) to the service broker VM. This is only required for the shared service plan. |
| 80 or 443<br>(Typically) | http or https<br>respectively  | Outbound from any service instance networks                                                    | Access to the backup blobstore                                                                                             |
| 8443<br>25555           | TCP                          | Outbound from any on-demand service broker network to the BOSH Director network                | For the on-demand service, the on-demand service broker needs to talk to the BOSH Director                                    |

\* Typically the service broker network and service instance network(s) are the same.



##  <a id="service-plans"></a>Configure Redis for PCF Service Plans

Click the Redis for PCF tile in the Ops Manager Installation Dashboard to display the configuration page
and allocate resources to Redis service plans.</br></br>

###  <a id="on-demand-config"></a>On-Demand Service Settings

1. Click **On-Demand Service Settings**, and then enter the **Maximum service instances across all on-demand plans**.
The maximum number of instances you set for all your on-demand plans combined cannot exceed this number.</br></br>
    ![settings](redis-odservice-settings.png)<br><br>
    For more information, see [Setting Limits for On-Demand Service Instances](./set-quotas.html).

1. Select the **Allow outbound internet access from service instances** checkbox.
   You must select this checkbox to allow external log forwarding, send backup artifacts to external destinations,
   and communicate with an external BOSH blob store.
  <p class="note"><strong>Note</strong>: Outbound network traffic rules also depend on your IaaS settings.
      Consult your network or IaaS administrator to ensure that your IaaS allows outbound traffic to the external networks you need.</p>

1. (Optional) Select the checkbox to enable **Service Instance Sharing**.
   This is a Beta feature.
   Turning on sharing enables this experimental feature for all on-demand instances.
    <p class="note"><strong>Note</strong>: To enable this feature a user with admin privileges
  must run <code>cf enable-feature-flag service\_instance\_sharing</code>.
 For information about this feature, see [Sharing a Redis Instance with Another Space (Beta)](./using.html#sharing).
  </p>

1. (Optional) Use the **Maximum Parallel Upgrades** field to configure the 
maximum number of Redis service instances that can be upgraded at the same time. 
<br><br>
  When you click **Apply Changes**, the on-demand broker upgrades all service instances. 
  By default, each instance is upgraded serially. 
  Allowing parallel upgrades reduces the time taken to apply changes. 
  <p class="note"><strong>Note</strong>: 
    Multiple Redis service instances will be concurrently unavailable during the upgrade.
  </p>

1. (Optional) To secure your on-demand service instance credentials in runtime [CredHub](https://docs.pivotal.io/pivotalcf/credhub/) instead of the Cloud Controller Database (CCDB), perform the following steps:
  1. Select the checkbox to enable **Secure Service Instance Credentials with Runtime CredHub**.
  1. Click **Save**.
  1. After deploying the tile, notify developers that they must unbind and rebind existing service instances to secure their credentials with CredHub.
    <p class="note"><strong>Note</strong>:
    This is a beta feature. Use it at your own risk in non-production environments. Send comments and feedback to the <a href="mailto:pivotal-cf-feedback@pivotal.io">PCF Feedback List</a>.</p>

1. To configure an on-demand plan, click **On-Demand Plan 1**, **2**, or **3**.</br></br>

    You can configure up to three on-demand plans with appropriate memory and disk sizes for your use case(s).
    Resource configuration options may vary on different IaaSs.
</br>
</br>
    The default names of the three on-demand plans provided reflect that instances of these plans are intended to be used for different cache sizes:</br></br>
    * **cache-small**: A Redis instance deployed to a dedicated VM, suggested to be configured with ~1&nbsp;GB of memory and >3.5&nbsp;GB of persistent disk
    * **cache-medium**: A Redis instance deployed to a dedicated VM, suggested to be configured with ~2&nbsp;GB of memory and >10&nbsp;GB of persistent disk
    * **cache-large**: A Redis instance deployed to a dedicated VM, suggested to be configured with ~4&nbsp;GB of memory and >14&nbsp;GB of persistent disk</br>

    ![on demand config](on-demand-config.png) <a id="planconfig"></a>
    
1. Configure the following settings for your on-demand plan(s).
   Any pre-populated default settings are pre-configured according to the memory and disk size of each plan.
    <table class="nice">
          <th>Field</th>
          <th>Description</th>
          <tr>
            <td>**Plan**</td>
            <td><strong>Select Plan Active</strong> or <strong>Plan Inactive</strong>.
                An inactive plan does not need any further configuration.</td>
          </tr>
          <tr>
            <td>**Plan Name**</td>
            <td>Enter a name that will appear in the Marketplace.</td>
          </tr>
          <tr>
            <td>**Plan Description**</td>
            <td>Enter a description that will appear in the Marketplace.
                Specify details that will be relevant to app developers.</td>
          </tr>
          <tr>
            <td>**Plan Quota**</td>
            <td>Enter the maximum number of instances of this plan that app developers can create.
              For more information, see [Setting Limits for On-Demand Service Instances](./set-quotas.html).</td>
          </tr>
          <tr>
            <td>**CF Service Access**</td>
            <td>Select a service access level.
                This setting does not modify the permissions that have been previously set,
                and allows for manual access to be configured from the CLI.</td>
          </tr>
          <tr>
            <td>**AZ to deploy Redis instances of this plan**</td>
            <td>This is the AZ in which to deploy the Redis instances from the plan.
                This must be one of the AZs of the service network (configured in the BOSH Director tile).</td>
          </tr>
          <tr>
            <td>**Server VM type**</td>
            <td>Select the VM type.
                Pivotal recommends that the **persistent disk should be at least 3.5x the VM memory**.</td>
          </tr>
          <tr>
            <td>**Server Disk type**</td>
            <td>Select the disk type.
                Pivotal recommends that the **persistent disk should be at least 3.5x the VM memory**.</td>
          </tr>
          <tr>
            <td>**Redis Client Timeout**</td>
            <td>This field refers to the server timeout for an idle client specified in seconds.
                The default setting is 3600.
                Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Redis TCP Keepalive**</td>
            <td>Redis TCP Keepalive refers to the interval (in seconds) at which TCP ACKS are sent to clients.
                The default setting is 60.
                Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Max Clients**</td>
            <td>Max Clients refers to the maximum number of clients that can be connected at any one time.
                Per plan, the default setting is 1000 for small, 5000 for medium and 10000 for large.
                Adjust this setting as needed.</td>
          </tr>
          <tr>
            <td>**Lua Scripting**</td>
            <td>Enable or disable Lua Scripting as needed.
                Pivotal recommends that Lua Scripting be disabled.</td>
          </tr>
    </table>

1.  Click **Save**.

#### <a id="change-on-demand"></a>Updating On-Demand Service Plans

Operators can update certain settings after the plans have been created.
If the operator updates the VM size, disk size, or the Redis configuration settings
(enabling Lua Scripting, max-clients, timeout and TCP keep-alive),
these settings are implemented in all instances that are already created.

Operators should not downsize the VMs or disk size because this can cause data loss in pre-existing instances.
Additionally, operators cannot make a plan that was previously active, inactive, until all instances of that plan have been deleted.

#### <a id="remove-on-demand"></a>Removing On-Demand Service Plans

If you want to remove the On-Demand Service from your tile, do the following: <br/>

1. Go to the **Resource Config** page on the Redis for PCF tile, and set the **Redis On-Demand Broker** job instances to 0.

1. Navigate to the **Errands** page on the Redis for PCF tile, and set the following errands to **off**:
    * Register On-Demand Broker
    * On-Demand Broker Smoke Tests
    * Upgrade All On-Demand Service Instances
    * Delete All Service Instances and Deregister On-Demand Broker

1. Create an empty service network.
   For instructions, see this [Knowledge Base article](https://discuss.pivotal.io/hc/en-us/articles/115010154387).

1. Go to each of the three On-Demand Plan pages on the Redis for PCF tile, and set each plan to **Plan Inactive**.
   For example:
  ![cache plan inactive](cache-plan-inactive.png)

###  <a id="shared-vm-config"></a>Shared-VM Plan

1.  Select the **Shared-VM Plan** tab.
![shared vm config](shared-vm-config.png)

1.  Configure these fields:<br><br>
      * **Redis Instance Memory Limit**---Maximum memory used by a shared-VM instance
      * **Redis Service Instance Limit**---Maximum number of shared-VM instances

 	Memory and instance limits depend on the total system memory of your Redis broker VM and require some
 	additional calculation. For more information, see [Memory Limits for Shared-VM Plans](#shared-vm-memory-limits) below.  

1. Click **Save**.

1. If you do not want to use the on-demand service, you must make all of the on-demand service plans inactive. 
Click the tab for each on-demand plan, and select **Plan Inactive**.
See the example in Step 4 of [Removing On-Demand Service Plans](#remove-on-demand) above.

1. To change the allocation of resources for the Redis broker, click the **Resource Config** tab.
    <br><br>The Redis broker server runs all of the Redis instances for your Shared-VM plan. 
    From the **Resource Config** page, you can change the CPU, RAM, Ephemeral Disk, and Persistent Disk made available, as needed.

#### <a id="shared-vm-memory-limits"></a>Memory Limits for Shared-VM Plans
Additional calculation is required to configure memory limits for shared-VM plans. 
With these plans, several service instances share the VM, and the Redis broker also runs on this same VM. 
Therefore, the memory used by all the shared-vm instances combined should be at most 45% of the memory of the Redis broker VM.

To configure the limits in these fields, 
estimate the maximum memory that could be used by all your Redis shared-VM instances combined. 
If that figure is higher than 45% of the Redis broker 
VM's total system memory, you can do one of the following:

  + Decrease the **Redis Instance Memory Limit**.
  + Decrease the number of instances in **Redis Service Instance Limit**.
  + Increase the RAM for the Redis Broker in the **Resource Config** tab as shown below.

    <img src="./images/redis-broker-resource.png">

  Here are some examples for setting these limits:

  <table border="1" class="nice">
      <tr>
        <th>Redis Broker VM Total Memory</th>
        <th>Redis Instance Memory Limit</th>
        <th>Redis Service Instance Limit</th>
      </tr>
      <tr>
        <td>16&nbsp;GB</td>
        <td>512&nbsp;MB</td>
        <td>14</td>
      </tr>
      <tr>
        <td>16&nbsp;GB</td>
        <td>256&nbsp;MB</td>
        <td>28</td>
      </tr>
      <tr>
        <td>64&nbsp;GB</td>
        <td>512&nbsp;MB</td>
        <td>56</td>
      </tr>
  </table>

  <p class="note"><strong>Note</strong>: It is possible to configure a larger <strong>Redis Service Instance Limit</strong>, 
      if you are confident that the majority of the deployed instances will not use a large amount of their allocated memory, 
      for example in development or test environments. <br><br>However, this practice is not supported and can cause your server to run out of memory,
      preventing users from writing any more data to any Redis shared-VM instance.
  </p>

###  <a id="dedicated-vm-config"></a>Dedicated-VM Plan

<p class="note"><strong>Note</strong>: As of Redis for PCF v1.11, 
    the on-demand service is at feature parity with the dedicated-VM service.
    The dedicated-VM service plan will be deprecated.
    Pivotal recommends using the on-demand service plan. See these instructions to [disable Shared-VM and Dedicated-VM Plans](#disable-shared-dedicated). </p>

1.  To configure the Dedicated-VM plan, click the **Resource Config** tab to change the allocation of resources for the **Dedicated Node**.
<a id="resource-config"></a>![dedicated vm config](dedicated-vm-config.png)
<br>
  - The default configuration creates five dedicated nodes (VMs). 
  Each node can run one Redis dedicated-VM instance.
  - You can change the number of dedicated nodes, and configure the size of the 
  persistent and ephemeral disks, and the CPU and RAM for each node.
  - The default VM size is small. It is important that you set the correct 
  VM size to handle anticipated loads. 
  - With dedicated-VM plans, there is one Redis service instance on each VM. 
  The maximum memory an instance can use should be at most 45% of the total system RAM on the VM.
  You can set this with the `maxmemory` configuration. 
  The app can use 100% of `maxmemory`--that is, up to 45% of the system RAM.
  - Pivotal recommends the persistent disk be set to 3.5x the amount of system RAM.

1. Click **Save**.

1. If you do not want to use the on-demand service, you must make all of the on-demand service plans inactive. 
Click the tab for each on-demand plan, and select **Plan Inactive**.
See the example in Step 4 of [Removing On-Demand Service Plans](#remove-on-demand) above.

### <a id="resources"></a>Configure Resources for Dedicated-VM and Shared-VM Plans

To configure resources for the Shared-VM and Dedicated-VM plans, click the **Resource Config** settings tab on the Redis for PCF tile.

* The Shared-VM plan is on the **Redis Broker** resource.
* The Dedicated-VM plan is on the **Dedicated Node** resource.

The following are the default resource and IP requirements for Redis for PCF when using the Shared-VM or Dedicated-VM plans:
<table border="1" class="nice">
  <tr>
    <th>Product</th>
    <th>Resource</th>
    <th>Instances</th>
    <th>CPU</th>
    <th>Ram</th>
    <th>Ephemeral</th>
    <th>Persistent</th>
    <th>Static IP</th>
    <th>Dynamic IP</th>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Redis Broker</td>
    <td>1</td>
    <td>2</td>
    <td>3072</td>
    <td>4096</td>
    <td>9216</td>
    <td>1</td>
    <td>0</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Dedicated Node</td>
    <td>5</td>
    <td>2</td>
    <td>1024</td>
    <td>4096</td>
    <td>4096</td>
    <td>1</td>
    <td>0</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Broker Registrar</td>
    <td>1</td>
    <td>1</td>
    <td>1024</td>
    <td>2048</td>
    <td>0</td>
    <td>0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Broker De-Registrar</td>
    <td>1</td>
    <td>1</td>
    <td>1024</td>
    <td>2048</td>
    <td>0</td>
    <td>0</td>
    <td>1</td>
  </tr>
  <tr>
    <td>Redis</td>
    <td>Compliation</td>
    <td>2</td>
    <td>2</td>
    <td>1024</td>
    <td>4096</td>
    <td>0</td>
    <td>0</td>
    <td>1</td>
  </tr>
</table>

### <a id="disable-shared-dedicated"></a>Disable Shared and Dedicated VM Plans

You can disable Shared and Dedicated VM Plans by doing the following while configuring Redis tile:

1. Ensure at least one On-Demand plan is active.

1. Configure the following tabs:<br><br>
  * **Shared-VM Plan**:<br>
    a. Set **Redis Service Instance Limit** to 0.<br>
    b. Click **Save**.<br><br>
  * **Errands**:<br>
    a. Set **Broker Registrar** to Off.<br>
    b. Set **Smoke Tests** to Off.<br>
    c. Set **Broker Deregistrar** to Off.<br>
    d. Leave all four On-Demand errands On. <br>
    e. Click **Save**.<br><br>
  * **Resource Config**:<br>
    a. Decrease **Redis Broker** Persistent disk type to the smallest size available.<br>
    b. Decrease **Redis Broker** VM type to the smallest size available.<br>
    c. Set **Dedicated Node** Instances to 0.<br>
    d. Click **Save**.<br>

### <a id="configurations"></a>Additional Redis Configurations

You can update certain plan settings after the plans have been created.
Updates to the settings for the components below are implemented in all existing instances:

* VM size 
* Disk size
* Redis configuration settings:
  * Lua Scripting 
  * Max-clients 
  * Timeout 
  * TCP keep-alive

<p class="warning note"><strong>WARNING: </strong>You must not downsize the VMs 
  or disk size. This can cause data loss in pre-existing instances.</p>

The following table describes properties you can update in the [plan configuration page](#planconfig), shown above.

<table border="1" class="nice">
  <tr>
    <th>Property</th>
    <th>Default</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><strong>Redis Client Timeout</strong></td>
    <td>3600</td>
    <td>Server timeout for an idle client specified in seconds (e.g., 3600)</td>
  </tr>
  <tr>
    <td><strong>Redis TCP Keepalive</strong></td>
    <td>60</td>
    <td>The max number of connected clients at the same time</td>
  </tr>
  <tr>
    <td><strong>Max Clients</strong></td>
    <td>1000/5000/10000 (small/medium/large)</td>
    <td>The max number of connected clients at the same time</td>
  </tr>
  <tr>
    <td><strong>Lua Scripting</strong></td>
    <td>Enabled</td>
    <td>Enable/Disable Lua scripting</td>
  </tr>
  <tr>
    <td><strong>Plan Quota</strong></td>
    <td>20</td>
    <td>Maximum number of Redis service instances for this plan, across all orgs and spaces.
    For more information, see <a href="./set-quotas.html">Setting Limits for On-Demand Service Instances</a>.</td>
  </tr>
</table>

For settings that app developers can configure, see [Customize an On-Demand Service Instance](./using.html#custom).

## <a id="syslog"></a>Configure Syslog Forwarding

Pivotal recommends that operators configure syslog forwarding to a remote destination.
Forwarding your system logs to a remote destination lets you:

* View logs from every VM in the Redis for PCF deployment in one place.
* Effectively troubleshooting when logs are lost on the source VM.
* Set up alerts for important error logs to monitor the deployment.

All logs follow RFC5424 format.

To configure syslog forwarding, do the following:

1. Click the Redis for PCF tile to display the configuration page, and then click the **Syslog** tab.

    <br>![syslog configuration](syslog-forwarding5.png)

1. Select either **Yes without encryption** or **Yes with TLS encryption**.

    <p class="note"><strong>Note:</strong> To use syslog forwarding for on-demand instances,
       you must select the <a href="#on-demand-config"> Allow outbound internet access from service instances</a> 
       checkbox in the <strong>On-Demand Service Settings</strong> tab.</p>

1. Enter the Syslog **Address** and **Port**, and select the **Transport protocol** of your remote destination.
   You can only use TCP if you are using TLS encryption.<br><br>
   The information required for these fields is provided by your remote destination.
   **Address** should be something such as `logs.papertrailapp.com`, and **Port** will be a number such as `41635`.

1. Select the format for your logs. [RFC5424](https://tools.ietf.org/html/rfc5424) is the suggested format.<br><br>
   For instances of the Redis on-demand plan, all logs follow RFC5424 format.
   Instances of the Dedicated-VM and Shared-VM plans allow for the operator to select their log format to be either their legacy format or RFC5424.
   PCF is moving toward all syslogs consistently using RFC5424 format.

1. If you selected **Yes with TLS encryption**, complete these fields:<br><br>
  * **Permitted Peer** refers to the remote syslog destination.
    It allows each VM to establish an encrypted tunnel with the remote syslog destination. 
  The Permitted Peer is either the accepted fingerprint (SHA1) or name of the remote peer, for example `*.example.com`.
  * **TLS CA certificate** refers to the trusted certificate authorities for the remote syslog destination.
    Large certificate chains (> 8&nbsp;kb) are not supported.

1.  Click **Save**.


## <a id="apply"></a> Apply Changes from Your Configuration

Your installation is not complete until you apply your configuration changes.
Follow the steps below:

1. Return to the Ops Manager Installation Dashboard.

2. Click **Apply Changes**.


##  <a id="asg"></a> Create Application Security Groups

To allow this service to have network access, 
you must create [Application Security Groups (ASGs)](http://docs.pivotal.io/pivotalcf/1-10/adminguide/app-sec-groups.html). 
Ensure your security group allows access to the Redis Service Broker VM and Dedicated VMs configured in your deployment. 
You can obtain the IP addresses for these VMs in Ops Manager under the <strong>Resource Config</strong> section for the Redis for PCF tile.</p>

<p class="note"><strong>Note</strong>: Without ASGs, this service is unusable.</p>

### Application Container Network Connections

Application containers that use instances of the Redis for PCF service require the following outbound network connections:

<table><thead>
<tr>
<th>Destination</th>
<th>Ports</th>
<th>Protocol</th>
<th>Reason</th>
</tr>
</thead><tbody>
<tr>
<td><code>ASSIGNED_NETWORK</code></td>
<td>32768-61000</td>
<td>tcp</td>
<td>Enable application to access shared vm service instance</td>
</tr>
<tr>
<td><code>ASSIGNED_NETWORK</code></td>
<td>6379</td>
<td>tcp</td>
<td>Enable application to access dedicated vm service instance</td>
</tr>
</tbody></table>

Create an ASG called `redis-app-containers` with the above configuration and bind it to the appropriate space or, 
to give all started apps access, bind to the `default-running` ASG set and restart your apps. Example:

```json
[
  {
    "protocol": "tcp",
    "destination": "ASSIGNED_NETWORK",
    "ports": "6379"
  }
]
```


## <a id="validation"></a>Validating Installation

Smoke tests run as part of Redis for PCF installation to validate that the install succeeded. 
For more information, see [Redis for PCF Smoke Tests](./smoke-tests.html).


## <a id="uninstall"></a>Uninstalling Redis for PCF

To uninstall Redis for PCF, do the following:

1. In the PCF Ops Manager Installation dashboard, click the trash can icon in the lower right hand corner of the Redis for PCF tile.
1. Confirm deletion of the product, and then click **Apply Changes**.
